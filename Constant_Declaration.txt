// Constant Declaration, Reserved Words, Assignment Statement//

11:42 AM 8/17/2025

Note:	IN THESE THREE EXAMPLES WE ARE ASSOCIATING AN IDENTIFIER WITH A VALUE THAT CANNOT CHANGE CALLED A NAMED CONSTANT. (EX: IN THIS-
	-REPERSENTATION IS ',', WE COULD'VE USED '.', OR '@' ect.)
	THIS TABLE SHOWS HOW TO DECLARE THE SAME THREE NAMED CONSTANTS IN ADA, VB.NET, C++, AND JAVA.

Ex:
	Languages				Constant Declaration

	Ada				Comma	: constant Character := ',' <---- NOTE the Assignment operator ':='
					Message	: constant String  := "Hello";
					Tax_Rate	: constant Float := 8.5;

	VB.NET				Const WORD1 As Char = ","c   <---- NOTE the Assignment operator '='
					Const Message As String = "Hello"
					Const TaxRate As Double = 8.5

	C++				const char COMMA ',':   <---- NOTE the Assignment operator
					const string MESSAGE = "Hello"
					const double TAX_RATE = 8.5;

	Java				final char COMMA = ',';   <---- NOTE the Assignment operator '='
					final String MESSAGE = "Hello"
					final double TAX_RATE = 8.5;

Notes:
	Low-Level programming languages do NOT declare they are closer to the 'Metal',
	meaning they are naming, Instead of, like high-level programming laguages declaring(using Identifier of variables).
	Also, using reserved words like: dim, or mu for example

(1)Python Reserved words:
def – defines a function
class – defines a class
if – conditional
else – alternative branch
elif – else if
while – loop
for – loop
return – return from function
import – import modules
try, except, finally – exception handling
with – context manager
in, is, not, and, or – logical operators
lambda – anonymous function
global, nonlocal – variable scope

(2)Java Reserved Words
public, private, protected – access modifiers
class – defines a class
interface – defines an interface
static – class-level method/variable
void – method that returns nothing
int, boolean, char, double, etc. – data types
new – creates a new object
return – returns from a method
if, else, switch, case – conditional statements
for, while, do – loops
try, catch, finally, throw, throws – exception handling
this, super, null, true, false

(3)C / C++ Reserved Words
int, float, char, void – data types
return – return from a function
if, else, switch, case – control flow
for, while, do – loops
break, continue – loop control
struct, union, enum – custom types
sizeof – size of a data type
typedef – type alias
static, extern, register, auto – storage class
const, volatile – qualifiers

(4)JavaScript Reserved Words
var, let, const – variable declarations
function – defines a function
if, else, switch, case – conditionals
for, while, do – loops
return – return value
try, catch, finally, throw – error handling
class, extends, constructor, super – object-oriented
this, new, null, true, false
import, export – modules
async, await – asynchronous programming	

(1)Python Assignment Statement
x = 11
name = "PMM"
is_valid = True
 Assignment Statement
int x = 11;
String name = "PMM";
boolean isValid = true;
(3)C++ Assignment Statement 
int x = 11;
char grade = 'PPP'; <-- usually 'P'
bool isValid = true;
(4)JavaScript Assignment Statement
let x = 11;
const name = "PMM";
var isValid = true;					